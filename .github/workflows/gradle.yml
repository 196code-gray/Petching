# This is a basic workflow to help you get started with Actions
name: Build and Deploy Spring Boot to AWS EC2

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: petching.link
  CODE_DEPLOY_APPLICATION_NAME: petching-client-codeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: petching-client-codeDeploy-group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Add permission
      run: chmod +x server/gradlew
      shell: bash
      
    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
      # build한 후 프로젝트를 압축합니다.
    - name: Make zip file
      run: zip -r ./deploy-practice-petching.zip .
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-region: ap-northeast-2
        
      # 압축한 프로젝트를 S3로 전송합니다.  
    - name: Upload to AWS S3
      run: aws s3 cp --region ap-northeast-2 ./deploy-practice-petching.zip s3://$S3_BUCKET_NAME/deploy-practice-petching.zip
      
      # CodeDeploy에 배포단위를 생성합니다.
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APPLICATION_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy-practice-petching.zip


      
