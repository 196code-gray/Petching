plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.Petching'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


// jar file name 변경
bootJar{
	archiveFileName = 'petching.jar'
}

// springCloudVersion setting
ext {
	set('springCloudVersion', "2021.0.8")
}

// dependencyManagement setting
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}



dependencies {
	// AWS paramStore 사용 Spring boot 버전 호환 상세 : https://spring.io/projects/spring-cloud
	// S3 Client 활성화
	implementation "org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config:2.2.6.RELEASE"
	implementation "io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config:2.3.0"
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 애너테이션 프로세싱 기능 활성화
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Web 기본 dependency
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 실시간 채팅을 위한 websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Spring Data JPA 사용을 위함
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 유효성 검증을 위한 dependency
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Entity 와 DTO 간 데이터 구조 변환을 위한 dependency
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	// MySQL DB 사용을 위한 dependency
	implementation 'mysql:mysql-connector-java:8.0.32'
	runtimeOnly 'mysql:mysql-connector-java'

	// GSON 라이브러리 : Java 객체 <=> JSON
	implementation 'com.google.code.gson:gson'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// jwt (?)
	implementation 'com.auth0:java-jwt:4.2.1'


}

tasks.named('test') {
	useJUnitPlatform()
}
